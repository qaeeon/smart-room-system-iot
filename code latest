#define BLYNK_TEMPLATE_ID "TMPL6MvtMfOU3"
#define BLYNK_TEMPLATE_NAME "Smart Room"
#define BLYNK_AUTH_TOKEN "IDbxDI33CkEQblDGBqWpDkfTCSE7eSNn"

#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <DHT.h>
#include <ESP32Servo.h>

// Wi-Fi Credentials
char ssid[] = "purr";
char pass[] = "gullibleass";

// --- Pin Assignments ---
#define DHT_PIN         4
#define DHT_TYPE        DHT22
#define LDR_PIN         34
#define RAIN_SENSOR_PIN 35

#define LED_PIN         15
#define FAN_PIN         18
#define SERVO_PIN       13

// --- Thresholds ---
#define TEMP_THRESHOLD  26.0
#define LDR_THRESHOLD   1000
#define RAIN_THRESHOLD  3000

// --- Global Variables ---
DHT dht(DHT_PIN, DHT_TYPE);
Servo windowServo;

bool manualFan = false;
bool manualWindow = false;
bool manualLight = false;

BlynkTimer timer;

// --- Manual Control Widgets ---
BLYNK_WRITE(V0) {
  manualFan = param.asInt();
}

BLYNK_WRITE(V1) {
  manualWindow = param.asInt();
}

BLYNK_WRITE(V2) {
  manualLight = param.asInt();
}

// --- Main Logic ---
void smartRoomControl() {
  float temperature = dht.readTemperature();
  int ldrValue = analogRead(LDR_PIN);
  int rainValue = analogRead(RAIN_SENSOR_PIN);

  // --- FAN CONTROL ---
  if (manualFan) {
    digitalWrite(FAN_PIN, HIGH);
    Blynk.virtualWrite(V0, 1);
  } else {
    if (!isnan(temperature) && temperature > TEMP_THRESHOLD) {
      digitalWrite(FAN_PIN, HIGH);
      Blynk.virtualWrite(V0, 1);
    } else {
      digitalWrite(FAN_PIN, LOW);
      Blynk.virtualWrite(V0, 0);
    }
  }

  // --- WINDOW CONTROL ---
  if (manualWindow) {
    windowServo.write(90);  // open
    Blynk.virtualWrite(V1, 1);
  } else {
    if (rainValue < RAIN_THRESHOLD) {
      windowServo.write(0);  // close
      Blynk.virtualWrite(V1, 0);
    } else {
      windowServo.write(90);  // open
      Blynk.virtualWrite(V1, 1);
    }
  }

  // --- LIGHT CONTROL ---
  if (manualLight) {
    digitalWrite(LED_PIN, HIGH);
    Blynk.virtualWrite(V2, 1);
  } else {
    if (ldrValue > LDR_THRESHOLD) {
      digitalWrite(LED_PIN, HIGH);
      Blynk.virtualWrite(V2, 1);
    } else {
      digitalWrite(LED_PIN, LOW);
      Blynk.virtualWrite(V2, 0);
    }
  }

  // --- Send Temperature to V3 (formatted as string) ---
  if (!isnan(temperature)) {
    char tempStr[10];
    dtostrf(temperature, 4, 1, tempStr);  // Format with 1 decimal
    Blynk.virtualWrite(V3, tempStr);
  }

  // --- Send Rain Status to V4 (string "Yes"/"No") ---
  String rainStatus = (rainValue < RAIN_THRESHOLD) ? "Yes" : "No";
  Blynk.virtualWrite(V4, rainStatus);

  // Debugging
  Serial.print("Temp: "); Serial.print(temperature);
  Serial.print(" | LDR: "); Serial.print(ldrValue);
  Serial.print(" | Rain: "); Serial.print(rainValue);
  Serial.print(" | Rain? "); Serial.println(rainStatus);
}

void setup() {
  Serial.begin(115200);

  pinMode(LED_PIN, OUTPUT);
  pinMode(FAN_PIN, OUTPUT);

  dht.begin();
  windowServo.attach(SERVO_PIN);
  windowServo.write(90);  // Start open

  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);

  timer.setInterval(2000L, smartRoomControl);  // every 2 seconds
}

void loop() {
  Blynk.run();
  timer.run();
}

